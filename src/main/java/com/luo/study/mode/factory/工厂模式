什么情况下适合工厂模式？
有一组类似的对象需要创建
在编码时不能预见需要创建哪种类的实例
系统需要考虑扩展性，不应依赖于产品类实例如何被创建、组合和表达的细节

项目中的现状
在软件系统中经常面临着“对象”的创建工作，由于需求的变化，这个对象可能随之也会发生变化，但它却拥有比较稳定的接口。
为此，我们需要提供一种封装机制来隔离出这个易变对象的变化，从而保持系统中其他依赖该对象的对象不随着需求变化而变化。

应用场景举例
myotee脸萌，一款制作头像的软件
可以自由选择发型、脸型、肤色、眉毛、眼镜、嘴巴、鼻子等。

要做一个类似脸萌的软件，应该怎么来构思呢？
以发型为例，发型是这个大产品中的一个小部件，如果制作出了发型，其它部分也都相似。再有更高级的应用，不同的用户级别需要
不同的产品部件，这样就产生了一个产品的系列。（圣诞系列、元旦系列、新年系列等）

常见应用
jdbc：是一种用于执行SQL语句的JAVA API，可以为多种关系数据库提供统一访问，它由一组用JAVA语言编写的类和接口组成

工厂模式的实现帮助我们
1、系统可以在不修改具体工厂角色的情况下引进新的产品
2、客户端不必关心对象如何创建，明确了职责
3、更好的理解面向对象的原则，面向接口编程，而不要面向实现编程

工厂模式适用于哪些场景
1、一个系统应当不依赖于产品类实例被创立，组成和表示的细节。这对于所有形态的工厂模式都是重要的。
2、这个系统的产品有至少一个的产品族
3、同属于同一个产品族的产品是设计成在一起使用的。这一约束必须得在系统的设计中体现出来
4、不同的产品以一系列的接口的面貌出现，从而使系统不依赖于接口实现的细节


